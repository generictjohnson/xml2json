#!/usr/bin/env python

import argparse
from io import BytesIO
import json
import logging
import os

from flask import abort, Flask, jsonify, request
import requests

from xml2json import parse_xml

parser = argparse.ArgumentParser()
parser.add_argument('--debug', action='store_true')
args = parser.parse_args()

if args.debug:
    logging.basicConfig(level=logging.DEBUG)
else:
    logging.basicConfig(level=logging.INFO)

app = Flask(__name__)

@app.route('/')
def index():
    '''Extract a url from the GET request, retrieve it, and return JSON.'''

    url = request.args.get('url')

    if url is None:
        abort(400, '"url" parameter must be supplied.')

    try:
        response = requests.get(url)

        if 200 != response.status_code:
            abort(400, 'Bad url: "%s"' % url)
    except Exception as e:
        abort(400, str(e))

    xml = BytesIO(response.text.encode('utf-8'))
    data, error = parse_xml(xml)

    if error is not None:
        abort(400, error)
        
    return jsonify(data)

port = int(os.environ.get('PORT', 8000))
app.run(debug=args.debug, host='0.0.0.0', port=port)
