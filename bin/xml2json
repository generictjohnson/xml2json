#!/usr/bin/env python

import argparse
import cStringIO
import logging
import json
import sys

import requests

from xml2json import parse_xml

parser = argparse.ArgumentParser()

parser.add_argument('--debug', type=argparse.FileType('r'), nargs='?')

group = parser.add_mutually_exclusive_group()
group.add_argument('--file', type=argparse.FileType('r'))
group.add_argument('--url')

parser.add_argument('--output', type=argparse.FileType('w'))

args = parser.parse_args()

if args.debug:
    logging.basicConfig(level=logging.DEBUG)
else:
    logging.basicConfig(level=logging.INFO)

if args.file:
    xml = args.file

elif args.url:
    response = requests.get(args.url)

    if 200 != resonse.status_code:
        logging.error('HTTP error %d: could not retrieve file at "%s"' % (
            response.status_code, args.url))
        sys.exit(1)

    xml = cStringIO.StringIO(response.text)

else:
    xml = cStringIO.StringIO(sys.stdin.read())

    # # Right now stdin is a pipe, which has an EOF - if we do not change it, 
    # # then the # interactive console will exit immediately - so we set stdin 
    # # back to the console (set it away from the pipe)
    # if sys.platform in ('win32', 'cygwin'):
    #     sys.stdin = open('CON')
    # else:
    #     sys.stdin = open('/dev/tty')

data = parse_xml(xml)

if args.output:
    json.dump(data, args.output)
else:
    print data
    print json.dumps(data, indent=2, sort_keys=True)